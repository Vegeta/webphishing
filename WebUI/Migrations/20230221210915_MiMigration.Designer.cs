// <auto-generated />
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebUI.Data;

#nullable disable

namespace WebUI.Migrations
{
    [DbContext(typeof(DbPhishing))]
    [Migration("20230221210915_MiMigration")]
    partial class MiMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebUI.Data.CodigoClase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("FechaCreacion")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_creacion");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("key");

                    b.HasKey("Id")
                        .HasName("pk_codigo_clase");

                    b.ToTable("codigo_clase", (string)null);
                });

            modelBuilder.Entity("WebUI.Data.Perfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("apellido");

                    b.Property<string>("Carrera")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("carrera");

                    b.Property<int?>("Edad")
                        .HasColumnType("integer")
                        .HasColumnName("edad");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("email");

                    b.Property<DateTime?>("FechaInicio")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha_inicio");

                    b.Property<string>("Genero")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("genero");

                    b.Property<string>("Nombre")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("nombre");

                    b.Property<string>("Profesion")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("profesion");

                    b.HasKey("Id")
                        .HasName("pk_perfil");

                    b.ToTable("perfil", (string)null);
                });

            modelBuilder.Entity("WebUI.Data.PruebaPerfil", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Cuestionario")
                        .HasColumnType("json")
                        .HasColumnName("cuestionario");

                    b.Property<DateTime?>("Fecha")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("fecha");

                    b.Property<int>("PerfilId")
                        .HasColumnType("integer")
                        .HasColumnName("perfil_id");

                    b.Property<int?>("TasaError")
                        .HasColumnType("integer")
                        .HasColumnName("tasa_error");

                    b.Property<int?>("TasaExito")
                        .HasColumnType("integer")
                        .HasColumnName("tasa_exito");

                    b.Property<float?>("TiempoPromedio")
                        .HasColumnType("real")
                        .HasColumnName("tiempo_promedio");

                    b.Property<float?>("TiempoTotal")
                        .HasColumnType("real")
                        .HasColumnName("tiempo_total");

                    b.HasKey("Id")
                        .HasName("pk_prueba_perfil");

                    b.HasIndex("PerfilId")
                        .HasDatabaseName("ix_prueba_perfil_perfil_id");

                    b.ToTable("prueba_perfil", (string)null);
                });

            modelBuilder.Entity("WebUI.Data.Respuesta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<List<List<string>>>("Click")
                        .HasColumnType("json")
                        .HasColumnName("click");

                    b.Property<string>("Comentario")
                        .HasColumnType("text")
                        .HasColumnName("comentario");

                    b.Property<List<List<string>>>("Focus")
                        .HasColumnType("json")
                        .HasColumnName("focus");

                    b.Property<int?>("Numero")
                        .HasColumnType("integer")
                        .HasColumnName("numero");

                    b.Property<int?>("Orden")
                        .HasColumnType("integer")
                        .HasColumnName("orden");

                    b.Property<int>("TestId")
                        .HasColumnType("integer")
                        .HasColumnName("prueba_id");

                    b.Property<string>("Texto")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("texto");

                    b.Property<float?>("Tiempo")
                        .HasColumnType("real")
                        .HasColumnName("tiempo");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("tipo");

                    b.HasKey("Id")
                        .HasName("pk_respuesta");

                    b.HasIndex("TestId")
                        .HasDatabaseName("ix_respuesta_prueba_id");

                    b.ToTable("respuesta", (string)null);
                });

            modelBuilder.Entity("WebUI.Data.PruebaPerfil", b =>
                {
                    b.HasOne("WebUI.Data.Perfil", "Perfil")
                        .WithMany("Tests")
                        .HasForeignKey("PerfilId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_prueba_perfil_perfil_perfil_id");

                    b.Navigation("Perfil");
                });

            modelBuilder.Entity("WebUI.Data.Respuesta", b =>
                {
                    b.HasOne("WebUI.Data.PruebaPerfil", "Prueba")
                        .WithMany("Respuestas")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respuesta_prueba_perfil_prueba_id");

                    b.Navigation("Prueba");
                });

            modelBuilder.Entity("WebUI.Data.Perfil", b =>
                {
                    b.Navigation("Tests");
                });

            modelBuilder.Entity("WebUI.Data.PruebaPerfil", b =>
                {
                    b.Navigation("Respuestas");
                });
#pragma warning restore 612, 618
        }
    }
}
