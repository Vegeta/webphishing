@model Domain.Transferencia.PreguntaContentModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<style>
	.CodeMirror {
		border: 1px solid #eee;
		box-shadow: 3px 3px 6px rgba(0, 0, 0, .3);
		font-size: 12px;
	}

	.CodeMirror-scroll {
		overflow-y: auto;
		overflow-x: auto;
		height: 100%;
	}
</style>

<section id="app">

	<div class="row">
		<div class="col-sm-6">


			<div class="card">
				<div class="card-body">
					<h5 class="card-title">Editar HTML</h5>

					<textarea id="editor" :value="model.html"></textarea>

					@*<div class="small">
						<span>Pregunta: <b>@Model.Nombre</b></span>

						<span class="float-end">Imagenes {imgroot}</span>
					</div>*@

					<div class="mt-2">
						<button class="btn btn-dark btn-sm" @@click="autoFormatSelection()" type="button">Format</button>

						<button class="btn btn-dark btn-sm float-end" @@click="procesar()" type="button">
							<i class="bi bi-play"></i>
							Preview
						</button>
					</div>


					<hr/>

					<div class="mt-3 text-center">
						<button type="button" class="btn btn-primary btn-sm" @@click="save()">
							<i class="bi bi-save"></i>
							Guardar
						</button>

						<button type="button" class="btn btn-info btn-sm float-end" @@click="openImagen()">
							<i class="bi bi-image"></i>
							Ver Imagenes
						</button>
					</div>

				</div>
			</div>

		</div>

		<div class="col-sm-6">
			<div class="card">
				<div class="card-body">
					<h5 class="card-title">Preview</h5>
					<div id="preview"></div>
				</div>
			</div>
		</div>
	</div>
	
	<visor-imagenes ref="visor"></visor-imagenes>

</section>

@section Scripts {

	@await Html.PartialAsync("_Validation")
	@await Html.PartialAsync("_Codemirror")
	@await Html.PartialAsync("_VisorImagenes")

	<script>
		// https://thecodebarbarian.com/building-a-code-editor-with-codemirror.html
		Vue.createApp({
			data() {
				return {
					model: @Html.Raw(ViewBag.modelo),
					baseurl: '@ViewBag.self',
					imagen: null,
					html: ''
				}
			},
			methods: {
				openImagen() {
					this.$refs.visor.open();
				},
				procesar() {
					//var orig = this.model.html;
					var orig = this._editor.getValue()
					var base = '@Url.Content("~/ejercicios")'
					orig = orig.replaceAll('{imgroot}', base)
					$('#preview').html(orig);
				},
				save() {
					var model = this.model;
					var data = {
						id: model.id,
						html: this._editor.getValue()
					}
					$.post(this.baseurl + '/SaveHtml', data).then(r => {
						alert('guardado');
						model.html = data.html;
					})
				},
				// formatting
				getSelectedRange() {
					return { from: this._editor.getCursor(true), to: this._editor.getCursor(false) };
				},
				autoFormatSelection() {
					var range = this.getSelectedRange();
					this._editor.autoFormatRange(range.from, range.to);
				}
			},
			mounted() {
				let self = this;

				$('#preview').on("click", "a", function (e) {
					e.preventDefault()
					alert('link clicked')
				});

				this._editor = CodeMirror.fromTextArea(document.getElementById("editor"), {
					lineNumbers: true,
					mode: 'htmlmixed',
					theme: 'material',
					indentUnit: 4,
				});
				this._editor.setSize(null, 500);
				this.procesar();

			}
		})
		//CompImagenes
		.component('visorImagenes', CompImagenes)
        .use(globalDirectives)
		.mount('#app')

	</script>
}