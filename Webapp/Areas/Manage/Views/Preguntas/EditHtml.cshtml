@model Domain.Transferencia.PreguntaContentModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<style>
	.CodeMirror {
		border: 1px solid #eee;
		box-shadow: 3px 3px 6px rgba(0, 0, 0, .3);
		font-size: 12px;
	}

	.CodeMirror-scroll {
		overflow-y: auto;
		overflow-x: auto;
		height: 100%;
	}
</style>

<section id="app">

	<div class="row">
		<div class="col-sm-6">


			<div class="card">
				<div class="card-body">
					<h5 class="card-title">Editar HTML</h5>

					<textarea id="editor" :value="model.html"></textarea>

					@*<div class="small">
						<span>Pregunta: <b>@Model.Nombre</b></span>

						<span class="float-end">Imagenes {imgroot}</span>
					</div>*@

					<div class="mt-2">
						<button class="btn btn-dark btn-sm" @@click="autoFormatSelection()" type="button">Format</button>

						<button class="btn btn-dark btn-sm float-end" @@click="procesar()" type="button">
							<i class="bi bi-play"></i>
							Preview
						</button>
					</div>


					<hr/>

					<div class="mt-3 text-center">
						<button type="button" class="btn btn-primary btn-sm" @@click="save()">
							<i class="bi bi-save"></i>
							Guardar
						</button>

						<button type="button" class="btn btn-info btn-sm float-end" @@click="openImagen()">
							<i class="bi bi-image"></i>
							Ver Imagenes
						</button>
					</div>

				</div>
			</div>

		</div>

		<div class="col-sm-6">
			<div class="card">
				<div class="card-body">
					<h5 class="card-title">Preview</h5>
					<div id="preview"></div>
				</div>
			</div>
		</div>
	</div>

	@* <div class="modal" tabindex="-1" id="popupFin" data-bs-backdrop="static" data-bs-keyboard="false"> *@
	<div class="modal" tabindex="-1" id="modalImagen">
		<div class="modal-dialog modal-dialog-centered modal-lg">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Imagenes</h5>
				</div>
				<div class="modal-body p-sm-4">

					<div class="mb-3">
						<button @@click="reloadImages()" class="btn btn-sm btn-primary" type="button">
							<i class="bi bi-arrow-clockwise"></i>
							Recargar lista
						</button>
					</div>

					<div class="row">
						<div class="col-sm-5">
							<h5>Lista</h5>
							<div class="table-responsive-sm" style="height:300px;overflow:auto">
								<table class="table minitabla table-hover">
									<tr v-for="i in imagenes" :class="{'bg-info':imagen==i.nombre}">
										<td @@click="verImagen(i)">
											{{ i.nombre }}
										</td>
									</tr>
								</table>
							</div>
							<div>
								<button type="button" class="btn btn-sm btn-info" v-if="imagen" @@click="copyImagen()">
									<i class="bi bi-clipboard"></i>
									Copiar nombre
								</button>
								<div id="msgCopy" class="float-end smaller" style="display:none">
									Nombre copiado
								</div>
							</div>
						</div>
						<div class="col-sm-7">
							<h5>Previsualización</h5>
							<div style="max-height:300px; overflow:auto">
								<img src="" id="imagen" style="width:100%;"/>
							</div>
						</div>
					</div>


				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
				</div>
			</div>
		</div>
	</div>


</section>

@section Scripts {

	@await Html.PartialAsync("_Validation")
	@await Html.PartialAsync("_Codemirror")

	<script>
		// https://thecodebarbarian.com/building-a-code-editor-with-codemirror.html
		Vue.createApp({
			data() {
				return {
					model: @Html.Raw(ViewBag.modelo),
					baseurl: '@ViewBag.self',
					imagenes: @Html.Raw(ViewBag.imagenes),
					imagen: null,
					html: ''
				}
			},
			methods: {
				copyImagen() {
					if(navigator.clipboard) {
						navigator.clipboard.writeText(this.imagen)
						
						$('#msgCopy')
							.show()
							.delay(1500)
							.fadeOut('slow').delay(2000).hide(0);
					}
				},
				openImagen() {
					$('#modalImagen').modal('show')
				},
				clearFile() {
					document.querySelector('#archivo').value = '';
				},
				verImagen(f) {
					var base = '@Url.Content("~/ejercicios")'
					var url = base + '/' + f.nombre
					this.imagen = f.nombre
					$('#imagen').attr('src', url);
				},
				reloadImages() {
					var self = this;
					var url = this.baseurl + '/imagenes';
					$.post(url).then(r => {
						self.imagenes = r
						$('#imagen').attr('src', '');
						self.imagen = null;
					});
				},
				procesar() {
					//var orig = this.model.html;
					var orig = this._editor.getValue()
					var base = '@Url.Content("~/ejercicios")'
					orig = orig.replaceAll('{imgroot}', base)
					$('#preview').html(orig);
				},
				save() {
					var model = this.model;
					var data = {
						id: model.id,
						html: this._editor.getValue()
					}
					$.post(this.baseurl + '/SaveHtml', data).then(r => {
						alert('guardado');
						model.html = data.html;
					})
				},
				// formatting
				getSelectedRange() {
					return { from: this._editor.getCursor(true), to: this._editor.getCursor(false) };
				},
				autoFormatSelection() {
					var range = this.getSelectedRange();
					this._editor.autoFormatRange(range.from, range.to);
				}
			},
			mounted() {
				var self = this;

				$('#preview').on("click", "a", function (e) {
					e.preventDefault()
					alert('clicked')
				});

				this._editor = CodeMirror.fromTextArea(document.getElementById("editor"), {
					lineNumbers: true,
					mode: 'htmlmixed',
					theme: 'material',
					indentUnit: 4,
				});
				this._editor.setSize(null, 500);
				this.procesar();

			}
		}).mount('#app')

	</script>
}