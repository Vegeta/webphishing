@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
	Layout = "_LayoutClient";
}

<div id="app">

	<examen :datos="datos" ref="examen"
			simulacion="1"
			:url-imagen="urlImagen"
			:retro-path="retroPath"
			:base-url="baseUrl"></examen>

	<div v-if="reporte">

		<div class="container mb-5 mt-3">
			<div class="row">
				<div class="col-sm-12 col-lg-4">
					<resumen :model="reporte.modelo" :respuestas="reporte.respuestas" style="font-size: smaller"></resumen>
				</div>
				<div class="col-sm-12 col-lg-4">
					<graf-percepcion :model="reporte.modelo" :percepcion="reporte.percepcion"></graf-percepcion>
				</div>
				<div class="col-sm-12 col-lg-4">
					<detalle-cuest :respuestas="reporte.cuest" :percepcion="reporte.percepcion"></detalle-cuest>
				</div>
			</div>

			<div class="mt-3">
				<respuestas :lista="reporte.respuestas" :retro-path="retroPath" :interacciones="reporte.interStats"></respuestas>
			</div>

		</div>

	</div>

</div>


@section Scripts {
	@await Html.PartialAsync("_Resultados")
	@await Html.PartialAsync("_Examen")

	<script>
		$('#footer .footer-top').hide();

		Vue.createApp({
			data() {
				return {
					baseUrl: '@ViewBag.self',
					urlImagen: '@Url.Content("~/ejercicios")',
					retroPath: '@Url.Content("~/retro")',

					datos: {
						model: @Html.Raw(ViewBag.model),
						pregunta: @Html.Raw(ViewBag.pregunta),
						cuest: @Html.Raw(ViewBag.cuest),
					},
					reporte: null,
				}
			},
			computed: {},
			methods: {},
			mounted() {
				const self = this;
				this.$refs.examen.verResultado = function(data) {
					this.modo = 'reporte'
					self.reporte = data;
				}
			},
			//extends: AppEvaluacion,
		})
		.component('cuestionario', Cuestionario)
		.component('grafPercepcion', GraficoPercepcion)
		.component('respuestas', CompRespuestas)
		.component('resumen', CompResumen)
		.component('detalleCuest', CompCuestDetalle)
		.component('examen', CompExamen)
		.use(globalDirectives)
		.mount('#app');

	</script>
}