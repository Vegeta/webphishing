@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<section id="app">

	<div class="row">
		<div class="col-sm-12 col-lg-4">
			<resumen :model="model" :respuestas="respuestas"></resumen>
		</div>
		<div class="col-sm-12 col-lg-4">
			<graf-percepcion :model="model" :percepcion="percepcion"></graf-percepcion>
		</div>
		<div class="col-sm-12 col-lg-4">
			<div class="card">
				<div class="card-body">
					<h5 class="card-title">Respuestas Cuestionario</h5>

					<table class="table minitabla table-hover">
						<thead>
							<tr>
								<th>Pregunta</th>
								<th>Respuesta</th>
								<th>Score</th>
								<th>Dimension</th>
							</tr>
						</thead>
						<tr v-for="p in cuest">
							<td v-text="p.pregunta"></td>
							<td v-text="p.respuesta"></td>
							<td v-text="p.puntaje"></td>
							<td v-text="p.dimension"></td>
						</tr>
					</table>

					<b>Agrupación</b>
					<table class="table minitabla table-hover">
						<thead>
							<tr>
								<th></th>
								<th colspan="2">Puntajes</th>
							</tr>
							<tr>
								<th class="col-sm-3">Dimensión</th>
								<th>Suma</th>
								<th>Promedio</th>
							</tr>
						</thead>
						<tr v-for="p in percepcion">
							<td v-text="p.dimension"></td>
							<td v-text="p.suma"></td>
							<td v-text="p.prom"></td>
						</tr>
					</table>

				</div>
			</div>

		</div>
	</div>

	<div>
		<respuestas :lista="respuestas" :retro-path="retroPath"></respuestas>
	</div>

</section>

@section Scripts {

	@await Html.PartialAsync("_Validation")
	@await Html.PartialAsync("_Resultados")

	@* <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> *@
	<script src="~/lib/chart.js"></script>

	<script>

		Vue.createApp({
			data() {
				return {
					model: @Html.Raw(ViewBag.modelo),
					respuestas: @Html.Raw(ViewBag.respuestas),
					percepcion: @Html.Raw(ViewBag.percepcion),
					cuest: @Html.Raw(ViewBag.cuest),
					baseurl: '@ViewBag.self',
					retroPath : '@Url.Content("~/retro")',
				}
			},
			computed: {
			},
			methods: {
			},
			mounted() {
				var self = this;
				// esto marcha creo
				
				var exito = this.model.exito;
				const optionsExito = {
					type: 'doughnut',
					data: {
						labels: ['Exito', 'Error'],
						datasets: [
							{
								data: [exito, 100 - exito],
								backgroundColor: ['rgba(22, 190, 126, 0.938)', 'rgb(211, 53, 53)'],
								hoverBackgroundColor: ['#7fe087', '#ee7b7b'],
								hoverBorderColor: ['#7fe087', '#ee7b7b']
							}
						]
					},
					options: {
						responsive: true,
					},
				};

				//var chartExamen = new Chart(document.getElementById('aciertos'),optionsExito);
			}
		})
		.component('grafPercepcion', GraficoPercepcion)
		.component('respuestas', CompRespuestas)
		.component('resumen', CompResumen)
		.use(globalDirectives)
		.mount('#app')

	</script>
}