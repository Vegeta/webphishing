@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<section id="app">

	<div class="row">
		<div class="col-sm-12 col-lg-4">
			<resumen :model="model" :respuestas="respuestas"></resumen>
		</div>
		<div class="col-sm-12 col-lg-4">
			<graf-percepcion :model="model" :percepcion="percepcion"></graf-percepcion>
		</div>
		<div class="col-sm-12 col-lg-4">
			<detalle-cuest :respuestas="cuest" :percepcion="percepcion"></detalle-cuest>
		</div>
	</div>

	<div>
		<respuestas :lista="respuestas" :retro-path="retroPath" :interacciones="inter"></respuestas>
	</div>

	@if (ViewBag.admin) {
		<div>
			<button class="btn btn-sm btn-danger" @@click="eliminar()">
				Eliminar
			</button>
		</div>
	}

</section>

@section Scripts {

	@await Html.PartialAsync("_Validation")
	@await Html.PartialAsync("_Resultados")

	@* <script src="https://cdn.jsdelivr.net/npm/chart.js"></script> *@
	<script src="~/lib/chart.js"></script>

	<script>

		Vue.createApp({
			data() {
				return {
					model: @Html.Raw(ViewBag.modelo),
					respuestas: @Html.Raw(ViewBag.respuestas),
					percepcion: @Html.Raw(ViewBag.percepcion),
					cuest: @Html.Raw(ViewBag.cuest),
					inter: @Html.Raw(ViewBag.interStats),
					baseurl: '@ViewBag.self',
					retroPath : '@Url.Content("~/ejercicios")',
				}
			},
			computed: {
			},
			methods: {
				eliminar(){
					if (!confirm("Eliminar esta evaluacion?"))
						return;
					var url = this.baseurl + '/eliminar/' + this.model.id;
					window.location.href =  url;
				}
			},
			mounted() {
				var self = this;
				// esto marcha creo

				var exito = this.model.exito;
				const optionsExito = {
					type: 'doughnut',
					data: {
						labels: ['Exito', 'Error'],
						datasets: [
							{
								data: [exito, 100 - exito],
								backgroundColor: ['rgba(22, 190, 126, 0.938)', 'rgb(211, 53, 53)'],
								hoverBackgroundColor: ['#7fe087', '#ee7b7b'],
								hoverBorderColor: ['#7fe087', '#ee7b7b']
							}
						]
					},
					options: {
						responsive: true,
					},
				};

				//var chartExamen = new Chart(document.getElementById('aciertos'),optionsExito);
			}
		})
		.component('grafPercepcion', GraficoPercepcion)
		.component('respuestas', CompRespuestas)
		.component('resumen', CompResumen)
		.component('detalleCuest', CompCuestDetalle)
		.use(globalDirectives)
		.mount('#app')

	</script>
}