@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<div id="app">
	<!-- ======= Breadcrumbs ======= -->
	<!--<section id="breadcrumbs" class="breadcrumbs">
		<div class="container">
		</div>
	</section>--><!-- End Breadcrumbs -->

	<!-- ======= Contact Section ======= -->
	<section id="contact" class="contact" style="margin-top:72px">
		<div class="container" data-aos="fade-up">

			<div class="section-title">
				<h2>Resultados de su Evaluación</h2>
			</div>

			<div class="row">
				<div class="col-lg-6 ">
					<resumen :model="model" :respuestas="respuestas"></resumen>
				</div>

				<div class="col-lg-6 mt-5 mt-lg-0 ">
					<graf-percepcion :model="model" :percepcion="percepcion"></graf-percepcion>
				</div>
			</div>

			<div>
				<respuestas :lista="respuestas" :retro-path="retroPath"></respuestas>
			</div>

			<div class="text-center">
				<hr/>
				<button type="button" class="btn btn-primary" @@click="terminar()">
					Terminar Evaluación
				</button>
			</div>
			
		</div>
	</section><!-- End Contact Section -->
</div>

@section Scripts {
	@await Html.PartialAsync("_Validation")
	@await Html.PartialAsync("_Resultados")

	<script src="~/lib/chart.js"></script>

	<script>

		$('#footer .footer-top').hide();

		Vue.createApp({
			data() {
				return {
					model: @Html.Raw(ViewBag.modelo),
					respuestas: @Html.Raw(ViewBag.respuestas),
					percepcion: @Html.Raw(ViewBag.percepcion),
					retroPath : '@Url.Content("~/ejercicios")',
					baseurl: '@ViewBag.self',
				}
			},
			computed: {
			},
			methods: {
				terminar() {
					jsonPost(this.baseurl + '/terminar').then(r => {
						window.location.href = r.url;
					});
				},
			},
			mounted() {
			}
		})
		.component('grafPercepcion', GraficoPercepcion)
		.component('respuestas', CompRespuestas)
		.component('resumen', CompResumen)
		.use(globalDirectives)
		.mount('#app')

	</script>
}